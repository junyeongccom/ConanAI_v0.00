services:
  postgres:
    image: postgres:15
    container_name: hc_postgres
    restart: always
    environment:
      POSTGRES_USER: hc_user
      POSTGRES_PASSWORD: hc_password
      POSTGRES_DB: hc_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  gateway:
    build:
      context: ./gateway_service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./gateway_service/.env
    depends_on:
      - postgres
    networks:
      - app-network

  stocktrend:
    container_name: stocktrend
    build:
      context: ./stocktrend_service
      dockerfile: Dockerfile
    volumes:
      - ./stocktrend_service:/app
    ports:
      - "8081:8081"
    env_file:
      - ./stocktrend_service/.env
    depends_on:
      - postgres
    networks:
      - app-network

  irsummary:
    build:
      context: ./irsummary_service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    env_file:
      - ./irsummary_service/.env
    depends_on:
      - postgres
    networks:
      - app-network

  chatbot:
    build:
      context: ./chatbot-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    env_file:
      - ./chatbot-service/.env
    depends_on:
      - postgres
    networks:
      - app-network

  esgdsd:
    build:
      context: ./esgdsd_service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    volumes:
      - ./esgdsd_service:/app
    env_file:
      - ./esgdsd_service/.env
    depends_on:
      - postgres
    networks:
      - app-network

  dsdgen:
    build:
      context: ./dsdgen_service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    env_file:
      - ./dsdgen_service/.env
    depends_on:
      - postgres
    volumes:
      - ./dart_documents:/app/app/dart_documents
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
